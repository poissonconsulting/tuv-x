.. TUV-x Grids

Grids
=====

A :f:type:`~tuvx_grid/grid_t` object defines discrete values along an axis (e.g., height, wavelength). 
There are three 
classes that can be used to configure TUV-x. Typically, the type of grid used
at runtime is configured from the configuration file. See 
:ref:`configuration-grid` for more information.

All grid configurations are generated by the factory pattern inside the
:f:mod:`tuvx_grid_factory`. Each grid is 
created once and lives in the :f:type:`~tuvx_grid_warehouse/grid_warehouse_t` 
class. A copy of the grid is returned each time the grid is needed. Each class
that depends on a grid will take a 
:f:type:`~tuvx_grid_warehouse/grid_warehouse_t` object as an
argument and pull the type of grid that is desired out of the warehouse, 
like this: ::

  function run( grid_warehouse ) result( thing )
      use tuvx_grid,           only : grid_t
      use tuvx_grid_warehouse, only : grid_warehouse_t

      integer                               :: thing
      type(grid_warehouse_t), intent(inout) :: grid_warehouse
      class(grid_t),          pointer       :: zGrid => null( )

      zGrid => grid_warehouse%get_grid( "height", "km" )
      ...
    end function run

The base grid type
^^^^^^^^^^^^^^^^^^
.. f:automodule:: tuvx_grid

Grid Factory
^^^^^^^^^^^^
.. f:automodule:: tuvx_grid_factory

Grid Warehouse
^^^^^^^^^^^^^^
.. f:automodule:: tuvx_grid_warehouse

Grid from equal delta
^^^^^^^^^^^^^^^^^^^^^
.. f:automodule:: tuvx_grid_equal_delta 

Grid from configuration file
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.. f:automodule:: tuvx_grid_from_config 

Grid from CSV File
^^^^^^^^^^^^^^^^^^
.. f:automodule:: tuvx_grid_from_csv_file 
